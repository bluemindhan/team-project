<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.oracle.choongangGroup.ry.model.BookVoMapper">

	<insert id="BookInsert" parameterType="BookVo">
		insert into book(bookId, bookName, publisher, cateCode, bookPrice, bookStock, bookInfo, bookImg, bookThumbImg)
		values (book_id_seq.nextval, #{bookName}, #{publisher}, #{cateCode}, #{bookPrice}, #{bookStock}, #{bookInfo}, #{bookImg}, #{bookThumbImg})
	</insert>
	
	<select id="BookList" resultType="BookVo" parameterType="BookVo">
		SELECT *
		FROM
		(
			SELECT rownum rn, a.*
			FROM
			(Select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.cateCode,b.regDate, c.cateParent,c.cateName
		From 
        book b
        
			inner join book_cate c
				on b.cateCode = c.cateCode
		Order By bookId asc
			) a
		)
		where rn between #{start} and #{end}
	</select>
	
	<select id="RYProcessTotal" resultType="int">
		Select count(*)
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		Order By bookId
	</select>
	
	<select id="BookDetail" resultType="BookVo" parameterType="int">
		Select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.cateCode,b.regDate, c.cateParent,c.cateName
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		Where bookId = #{bookId}
	</select>
	
	<select id="BookJoin" resultType="BookVo" parameterType="int">
		select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.cateCode,b.regDate, c.cateParent,c.cateName
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		where b.bookId=#{bookId}
	</select>
	
	<update id="BookUpdate" parameterType="BookVo">
		update Book
		set 
		bookId = #{bookId},
		bookName = #{bookName},
		publisher = #{publisher},
		bookPrice = #{bookPrice},
		bookStock = #{bookStock},
		bookInfo = #{bookInfo},
		bookImg = #{bookImg},
		bookThumbImg = #{bookThumbImg}
		Where bookId= #{bookId}
	</update>
	
	<delete id="BookDelete" parameterType="int">
	delete from Book
	Where bookId = #{bookId}
	</delete>
	
	<select id="ShopList" resultType="BookVo" parameterType="BookVo">
		SELECT *
		FROM
		(
			SELECT rownum rn, a.*
			FROM
			(
		Select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.cateCode,b.regDate, c.cateParent,c.cateName
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		Order By bookId asc) a
		)
		where rn between #{start} and #{end}
	</select>
	
	<select id="RYShopProcessTotal" resultType="int">
		Select count(*)
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		Order By bookId
	</select>
	
	<select id="ShopDetailList" resultType="BookVo" parameterType="int">
		Select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.cateCode,b.regDate, c.cateParent,c.cateName
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		Where bookId = #{bookId}
	</select>
	
	<select id="GetBookSearch" resultType="BookVo" parameterType="BookVo">
	select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.regDate, b.cateCode, c.cateParent,c.cateName
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		<!-- <if test="cateParent != null and cateParent !=''" >
		Where cateParent Like CONCAT('%', #{keyword}, '%')
		</if> -->
		<if test="keyword != null and keyword !=''">
		and bookName Like '%'|| #{keyword} || '%'
		</if>
	</select>
	
	<select id="SearchBookList" resultType="BookVo" parameterType="BookVo">
	select b.bookId, b.bookName, b.publisher, b.bookPrice, b.bookStock, b.bookInfo , b.bookImg , b.bookThumbImg ,b.cateCode,b.regDate, c.cateParent,c.cateName
		From book b
			inner join book_cate c
				on b.cateCode = c.cateCode
		<choose>
			<when test="type == 'bookName'">
			Where bookName Like '%'|| #{keyword} || '%'
			</when>
			<when test="type =='publisher'">
			Where publisher Like '%'|| #{keyword} || '%'
			</when>
		</choose>
		<!-- <if test="type != null and type.equals('bookName')">
		Where bookName Like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="type != null and type.equals('publisher')">
		and publisher Like CONCAT('%', #{keyword}, '%')
		</if> -->
	</select>
	
	<update id="ChangeStock" parameterType="BookVo">
		update Book
		set bookStock = bookStock - #{bookStock}
		where bookId = #{bookId}
	</update>
</mapper>